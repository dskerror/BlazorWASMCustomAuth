@using BlazorWASMCustomAuth.Security.Shared.Constants;
<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
    <AuthorizeView>
        <Authorized>
            <MudListSubheader Class="mt-2 mb-n2">Admin</MudListSubheader>
            <MudNavLink Href="/admin/users" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Users</MudNavLink>
            <MudNavLink Href="/admin/roles" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Roles</MudNavLink>
            <MudNavLink Href="/admin/authenticationproviders" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Authentication Providers</MudNavLink>
        </Authorized>
    </AuthorizeView>

</MudNavMenu>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    private bool AccessUsersView;
    private bool AccessRolesView;
    private bool AccessAuthenticationProviders;

    protected override async Task OnInitializedAsync()
    {
        var state = await authenticationState;
        var user = state.User;
        if (user.HasClaim(x => x.Type == Access.Admin))
        {
            AccessUsersView = true;
            AccessRolesView = true;
            AccessAuthenticationProviders = true;
        }
        if (user.HasClaim(x => x.Type == Access.Users.View))
            AccessUsersView = true;

        if (user.HasClaim(x => x.Type == Access.Roles.View))
            AccessRolesView = true;

        if (user.HasClaim(x => x.Type == Access.AuthenticationProvider.View))
            AccessAuthenticationProviders = true;
    }

}